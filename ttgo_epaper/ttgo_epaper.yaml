esphome:
  name: ttgoepaper
  platform: ESP32
  board: esp32dev
  platformio_options:
    monitor_speed: 115200
    upload_speed: 115200

substitutions:
  devicename: "ttgoepaper"
  mqtt_topic_prefix: 'ttgoepaper'
  font_name: 'fonts/RobotoMono-Regular.ttf'

mqtt:
  broker: !secret mqtt_broker_ip
  username: !secret mqtt_broker_username
  password: !secret mqtt_broker_pwd
  discovery: false
  birth_message:
    topic: $mqtt_topic_prefix/birth
    payload: online
  will_message:
    topic: $mqtt_topic_prefix/LWT
    payload: offline

font:
  - file: $font_name
    id: robotomono_caption
    size: 18
  - file: $font_name
    id: robotomono_subtitle
    size: 24
  - file: $font_name
    id: robotomono_title
    size: 30

image:
  - file: "images/video-box-off.png"
    id: video_box_off
    #resize: 72x72
  - file: "images/video-box.png"
    id: video_box
    #resize: 72x72

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pwd
  use_address: "$devicename.local"
  fast_connect: true
  power_save_mode: HIGH

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "ttgoepaper Fallback Hotspot"
    password: "$hotspot_fallback_pwd"

captive_portal:

api:

# Enable logging
logger:
  level: DEBUG
  logs:
    mqtt.component: DEBUG
    mqtt.client: DEBUG

spi:
  clk_pin: 18
  mosi_pin: 23
  #miso_pin: 17 # 2

binary_sensor:
  - platform: homeassistant
    entity_id: binary_sensor.ffptn3850_camera_in_use
    id: active_camera
  - platform: homeassistant
    entity_id: binary_sensor.ffptn3850_microphone_in_use
    id: active_mic
  - platform: gpio
    pin:
      number: 39
      mode: INPUT_PULLUP
      inverted: True
    name: "ePaper Button"
    # on_press:
    #   then:
    #     - display.page.show_next: epaper_display

sensor:
  - platform: adc
    pin: 35
    name: "Battery"
    id: pin35
    update_interval: 300s
    attenuation: 11db
    filters:
      - sliding_window_moving_average:
          window_size: 5
          send_every: 5

# interval:
#   - interval: 30s
#     then:
#       - display.page.show_next: epaper_display
#       - component.update: epaper_display

display:
  - platform: waveshare_epaper
    cs_pin: 5
    dc_pin: 17 
    busy_pin: 4
    reset_pin: 16
    model: 2.13in-ttgo-b73
    update_interval: 15s
    full_update_every: 90
    rotation: 270Â°
    id: epaper_display
    pages:
      - id: page1
        lambda: |-
          // Size of screen: 250x122
          #define SCREEN_WIDTH 250
          #define IMAGE_SIZE 96
          #define SCREEN_HEIGHT 122
          #define TOP_LINE_YY 0
          #define MIDDLE_LINE_YY 42
          #define BOTTOM_LINE_YY 100
          #define HORIZONTAL_OFFSET 50

          // Turn the whole display off.
          it.fill(COLOR_OFF);

          // it.line(0, 0, it.get_width(), 0);

          // it.print(0, TOP_LINE_YY, id(robotomono_title), TextAlign::TOP_LEFT, "On a call");

          bool onCallRightNow = id(active_camera).state || id(active_mic).state;

          esphome::display::Image *targetImage = onCallRightNow ? id(video_box) : id(video_box_off);
          it.image(170, 30, targetImage);

          it.printf(0, MIDDLE_LINE_YY, id(robotomono_title), TextAlign::TOP_LEFT, onCallRightNow ? "I am Busy" : "I am free");

          //it.printf(0, BOTTOM_LINE_YY, id(robotomono_caption), TextAlign::TOP_LEFT, "Camera: %d, Mic: %d", id(active_camera).state, id(active_mic).state);
      # - id: page2
      #   lambda: |-
      #     it.fill(COLOR_OFF);
      #     //it.print(0, 0, id(robotomono_subtitle), "TODO: Page 2");

# deep_sleep:
#   id: deep_sleep_ttgo_epaper
#   run_duration: 45s
#   sleep_duration: 1min